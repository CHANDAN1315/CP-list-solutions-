Que :- Repeat and Missing Number

https://www.youtube.com/watch?v=5nMGY4VUoRY&list=PLgUwDviBIf0rPG3Ictpu74
YWBQ1CaBkm2&index=3 

Solution :

1st Brute
hint :- short the array and use index to find the missing element (simple brute force)
Time -> O(nlogn) , Space -> O(1)

2nd Better
hint :- using extra space and in O(n) time 
        use hash table and mark the element that occur once as (1) and if the element occur again (repeating) then output that 
        and in secound travel check the unmarked element and output that as not occuring element .
Time -> O(n) , space -> O(n) 

3rd Best
hint :- Traverse the array. While traversing, use the absolute value of every element as an index and make the value at this 
        index as negative to mark it visited. If something is already marked negative then this is the repeating element.
        To find missing, traverse the array again and look for a positive value.
        
 Code :-
 class solution {
 public :
      void print_two_element(int arr[] ,  int size){
            cout << "The repeating element is -> ";
            
            for(int i =0; i < size; i++){
                  if(arr[abs(arr[i])-1] > 0){
                      arr[abs(arr[i] -1)] = -arr[abs(arr[i]-1)];
                  }
                  else {
                      cout << abs(arr[i]) <<endl;
                  }
            }
            
            for (int i =0; i<size ; i++){
                  if(a[i] >0) cout <<(i+1)<<endl; 
            }
      }
 };
